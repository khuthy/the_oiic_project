<!-- <header>
    <ion-toolbar>
        <ion-buttons slot="end">
            <ion-spinner name="lines-small"></ion-spinner>
        </ion-buttons>
    </ion-toolbar>
</header>
<ion-content>
   <ion-grid>
       <ion-row>
           <ion-col>
               <ion-button>
                   <ion-icon slot="icon-only" name="time"></ion-icon>
                  
               </ion-button>
           </ion-col>
       </ion-row>
   </ion-grid>
</ion-content> -->

<ion-card>
    <ion-card-header> Bar Chart </ion-card-header>
    <ion-card-content>
      <canvas #barCanvas></canvas>
    </ion-card-content>
  </ion-card>

@ViewChild('barCanvas', {static: false}) barCanvas;
   barChart: Chart;
   label =  ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"];


   setTimeout(() => {
      this.barChart = new Chart(this.barCanvas.nativeElement, {
        type: "bar",
        data: {
          labels: this.label,
          datasets: [
            {
              label: "# of Votes",
              data: [12, 19, 3, 5, 2, 3],
             
              backgroundColor: [
                "rgba(255, 99, 132, 0.2)",
                "rgba(54, 162, 235, 0.2)",
                "rgba(255, 206, 86, 0.2)",
                "rgba(75, 192, 192, 0.2)",
                "rgba(153, 102, 255, 0.2)",
                "rgba(255, 159, 64, 0.2)"
              ],
              borderColor: [
                "rgba(255,99,132,1)",
                "rgba(54, 162, 235, 1)",
                "rgba(255, 206, 86, 1)",
                "rgba(75, 192, 192, 1)",
                "rgba(153, 102, 255, 1)",
                "rgba(255, 159, 64, 1)"
              ],
              borderWidth: 1
            }
          ]
        },
        /* options: {
          scales: {
            yAxes: [
              {
                ticks: {
                  beginAtZero: true
                }
              }
            ]
          }
        } */
      });
    }, 3000);